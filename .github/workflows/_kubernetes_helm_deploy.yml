name: Template - Kubernetes Helm Deploy

on:
  workflow_dispatch:
    inputs:
      working_dir:
        required: true
        type: string
        description: Working directory
      values_file:
        required: false
        type: string
        description: Location of values.yml file
      namespace:
        required: true
        type: string
        description: Kubernetes namespace
      release_name:
        required: true
        type: string
        description: Helm release name
      helm_name:
        required: true
        type: string
        description: Helm name
      helm_repo:
        required: false
        type: string
        description: Helm repo
      image_tag:
        required: true
        type: string
        description: Specify image tag
        default: latest
  workflow_call:
    inputs:
      working_dir:
        required: true
        type: string
      values_file:
        required: false
        type: string
      namespace:
        required: true
        type: string
      release_name:
        required: true
        type: string
      helm_name:
        required: true
        type: string
      helm_repo:
        required: false
        type: string
      image_tag:
        required: true
        type: string
        default: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_dir }} #./django/api #
    steps:
      - uses: actions/checkout@v2

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v3
        with:
          resource-group: 'rg-appelent-shared'
          cluster-name: 'aks-appelent'

      - name: Add Helm repo
        if: ${{ inputs.helm_repo }}
        run: |
          helm repo add my-repo ${{ inputs.helm_repo }}

      - name: Deploy
        run: |
          helm upgrade --install --atomic --timeout 5m ${{ inputs.release_name }} ${{ inputs.helm_name }} -f ${{ inputs.values_file }} \
            --namespace ${{ inputs.namespace }} --create-namespace --set image.tag=${{ inputs.image_tag }}
