name: Terraform Infrastructure Build Workflow

on:
  push:
    branches:
      - main
      - develop
    paths:
    - infrastructure/**
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
    - infrastructure/**
  workflow_dispatch:
  
env:
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set environment for branch
      run: |
        if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            echo "ENV=prd" >> "$GITHUB_ENV"
            echo "TF_WORKSPACE=prd" >> "$GITHUB_ENV"
            mv prd.tfvars terraform.tfvars
        fi

        if [[ "${{github.base_ref}}" == "develop" || "${{github.ref}}" == "refs/heads/develop" ]]; then
          echo "ENV=dev" >> "$GITHUB_ENV"
          echo "TF_WORKSPACE=dev" >> "$GITHUB_ENV"
          mv dev.tfvars terraform.tfvars
        fi

    - uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -target="module.heroku_config" -out=planfile

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      id: apply
      run: terraform apply -no-color -auto-approve planfile
