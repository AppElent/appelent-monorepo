name: Template - Build docker image

on:
  workflow_dispatch:
    inputs:
      working_dir:
        required: true
        type: string
        description: Working directory
      repository_name:
        required: true
        type: string
        description: Name of the docker repository
      artifact_name:
        required: false
        type: string
        description: Specify artifact name
      artifact_path:
        required: false
        type: string
        description: Specify artifact path
  workflow_call:
    inputs:
      working_dir:
        required: true
        type: string
      repository_name:
        required: true
        type: string
      artifact_name:
        required: false
        type: string
      artifact_path:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_dir }} #./django/api #
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        #if: "${{ github.event.inputs.artifact_name != '' && github.event.inputs.artifact_path != '' }}"
        with:
          name: ${{inputs.artifact_name}}
          path: ${{inputs.artifact_path}}

      - uses: actions/download-artifact@v3
        #if: "${{ github.event.inputs.artifact_name != '' && github.event.inputs.artifact_path == '' }}"
        with:
          name: ${{inputs.artifact_name}}
      
      - name: templs
        run: ls

      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          # Parse Azure secret into variables
          $servicePrincipal = ($env:AZURE_CREDENTIALS | ConvertFrom-Json)
          $env:ARM_CLIENT_ID = $servicePrincipal.clientId
          $env:ARM_CLIENT_SECRET = $servicePrincipal.clientSecret
          $env:ARM_SUBSCRIPTION_ID = $servicePrincipal.subscriptionId
          $env:ARM_TENANT_ID = $servicePrincipal.tenantId
          # Save environment variable setup for subsequent steps
          Get-ChildItem -Path Env: -Recurse -Include ARM_*,TF_VAR_* | ForEach-Object {Write-Output "$($_.Name)=$($_.Value)"} >> $env:GITHUB_ENV
        shell: pwsh

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Get ACR details"
        run: |
          echo "loginServer=$(az acr show -n acrappelent --query loginServer -o tsv)" >> "$GITHUB_ENV"

      - uses: Azure/docker-login@v1
        with:
          login-server: ${{ env.loginServer }}
          username: ${{ env.ARM_CLIENT_ID }}
          password: ${{ env.ARM_CLIENT_SECRET }}

      # - run: |
      #     docker build . -t ${{ env.loginServer }}/${{ inputs.repository_name }}:${{ github.sha }} -t ${{ env.loginServer }}/${{ inputs.repository_name }}:latest
      #     docker image push --all-tags ${{ env.loginServer }}/${{ inputs.repository_name }}
